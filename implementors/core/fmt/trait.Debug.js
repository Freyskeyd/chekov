(function() {var implementors = {};
implementors["chekov"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"chekov/command/enum.Consistency.html\" title=\"enum chekov::command::Consistency\">Consistency</a>","synthetic":false,"types":["chekov::command::consistency::Consistency"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"chekov/command/struct.CommandMetadatas.html\" title=\"struct chekov::command::CommandMetadatas\">CommandMetadatas</a>","synthetic":false,"types":["chekov::command::metadata::CommandMetadatas"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"chekov/prelude/enum.CommandExecutorError.html\" title=\"enum chekov::prelude::CommandExecutorError\">CommandExecutorError</a>","synthetic":false,"types":["chekov::error::CommandExecutorError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"chekov/prelude/enum.ApplyError.html\" title=\"enum chekov::prelude::ApplyError\">ApplyError</a>","synthetic":false,"types":["chekov::error::ApplyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"chekov/prelude/struct.EventMetadatas.html\" title=\"struct chekov::prelude::EventMetadatas\">EventMetadatas</a>","synthetic":false,"types":["chekov::message::EventMetadatas"]}];
implementors["event_store"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"event_store/prelude/enum.EventStoreError.html\" title=\"enum event_store::prelude::EventStoreError\">EventStoreError</a>","synthetic":false,"types":["event_store::error::EventStoreError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/prelude/struct.RecordedEvent.html\" title=\"struct event_store::prelude::RecordedEvent\">RecordedEvent</a>","synthetic":false,"types":["event_store::event::recorded::RecordedEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/prelude/struct.RecordedEvents.html\" title=\"struct event_store::prelude::RecordedEvents\">RecordedEvents</a>","synthetic":false,"types":["event_store::event::recorded::RecordedEvents"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/prelude/struct.UnsavedEvent.html\" title=\"struct event_store::prelude::UnsavedEvent\">UnsavedEvent</a>","synthetic":false,"types":["event_store::event::unsaved::UnsavedEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"event_store/prelude/enum.ExpectedVersion.html\" title=\"enum event_store::prelude::ExpectedVersion\">ExpectedVersion</a>","synthetic":false,"types":["event_store::expected_version::ExpectedVersion"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"event_store/prelude/enum.ReadVersion.html\" title=\"enum event_store::prelude::ReadVersion\">ReadVersion</a>","synthetic":false,"types":["event_store::read_version::ReadVersion"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/prelude/struct.InMemoryBackend.html\" title=\"struct event_store::prelude::InMemoryBackend\">InMemoryBackend</a>","synthetic":false,"types":["event_store::storage::inmemory::InMemoryBackend"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/prelude/struct.PostgresBackend.html\" title=\"struct event_store::prelude::PostgresBackend\">PostgresBackend</a>","synthetic":false,"types":["event_store::storage::postgres::PostgresBackend"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"event_store/prelude/enum.StorageError.html\" title=\"enum event_store::prelude::StorageError\">StorageError</a>","synthetic":false,"types":["event_store::storage::StorageError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/prelude/struct.Stream.html\" title=\"struct event_store::prelude::Stream\">Stream</a>","synthetic":false,"types":["event_store::stream::Stream"]},{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"event_store/prelude/trait.Storage.html\" title=\"trait event_store::prelude::Storage\">Storage</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"event_store/struct.EventStoreBuilder.html\" title=\"struct event_store::EventStoreBuilder\">EventStoreBuilder</a>&lt;S&gt;","synthetic":false,"types":["event_store::EventStoreBuilder"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()