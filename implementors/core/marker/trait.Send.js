(function() {var implementors = {};
implementors["chekov"] = [{"text":"impl&lt;A&gt; !Send for SubscriberManager&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for AggregateInstance&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for AggregateInstanceRegistry&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Send for ApplicationBuilder&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Send for DefaultEventResolver&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl Send for CommandMetadatas","synthetic":true,"types":[]},{"text":"impl Send for CommandExecutorError","synthetic":true,"types":[]},{"text":"impl Send for ApplyError","synthetic":true,"types":[]},{"text":"impl&lt;A, E&gt; Send for EventHandlerInstance&lt;A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Send for Subscribe&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C, A&gt; Send for Dispatch&lt;C, A&gt;","synthetic":true,"types":[]},{"text":"impl Send for EventMetadatas","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for EventEnvelope&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for Router&lt;A&gt;","synthetic":true,"types":[]}];
implementors["event_store"] = [{"text":"impl&lt;S&gt; Send for EventStore&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for EventStoreBuilder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Send for StreamInfo","synthetic":true,"types":[]},{"text":"impl Send for EventStoreError","synthetic":true,"types":[]},{"text":"impl Send for RecordedEvent","synthetic":true,"types":[]},{"text":"impl Send for RecordedEvents","synthetic":true,"types":[]},{"text":"impl Send for UnsavedEvent","synthetic":true,"types":[]},{"text":"impl Send for ExpectedVersion","synthetic":true,"types":[]},{"text":"impl Send for ReadVersion","synthetic":true,"types":[]},{"text":"impl Send for StorageError","synthetic":true,"types":[]},{"text":"impl Send for Appender","synthetic":true,"types":[]},{"text":"impl Send for InMemoryBackend","synthetic":true,"types":[]},{"text":"impl Send for PostgresBackend","synthetic":true,"types":[]},{"text":"impl Send for Reader","synthetic":true,"types":[]},{"text":"impl Send for Stream","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()