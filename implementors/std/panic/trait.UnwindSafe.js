(function() {var implementors = {};
implementors["bank"] = [{"text":"impl UnwindSafe for DefaultApp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Account","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AccountEventRegistration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountStatus","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AccountProjector","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeleteAccount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenAccount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UpdateAccount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountDeleted","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountOpened","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UserRegistered","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccountUpdated","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoneyMovementEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for find_all","synthetic":true,"types":[]},{"text":"impl UnwindSafe for find","synthetic":true,"types":[]},{"text":"impl UnwindSafe for create","synthetic":true,"types":[]},{"text":"impl UnwindSafe for update","synthetic":true,"types":[]},{"text":"impl UnwindSafe for delete","synthetic":true,"types":[]}];
implementors["chekov"] = [{"text":"impl&lt;A&gt; !UnwindSafe for SubscriberManager&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for AggregateInstance&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for AggregateInstanceRegistry&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for ApplicationBuilder&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for DefaultEventResolver&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandMetadatas","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommandExecutorError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplyError","synthetic":true,"types":[]},{"text":"impl&lt;A, E&gt; UnwindSafe for EventHandlerInstance&lt;A, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !UnwindSafe for Subscribe&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C, A&gt; UnwindSafe for Dispatch&lt;C, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventMetadatas","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for EventEnvelope&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for Router&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["event_store"] = [{"text":"impl&lt;S&gt; !UnwindSafe for EventStore&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for EventStoreBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventStoreError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecordedEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecordedEvents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsavedEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpectedVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Appender","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InMemoryBackend","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PostgresBackend","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Reader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stream","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()