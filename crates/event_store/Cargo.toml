[package]
name = "event_store"
version = "0.1.1"
authors = ["Freyskeyd <simon.paitrault@gmail.com>"]
edition = "2018"
description = "Crate to deal with every aspect of an eventstore"
license = "MIT"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
uuid.workspace = true
serde.workspace = true
serde_json.workspace = true
actix.workspace = true
tracing.workspace = true
tokio.workspace = true
futures.workspace = true

event_store-core = { version = "0.1.0", path = "../event_store-core" }

event_store-storage-inmemory = { version = "0.1.0", path = "../event_store-storage-inmemory", optional = true }
event_store-backend-inmemory = { version = "0.1.0", path = "../event_store-backend-inmemory", optional = true }
event_store-eventbus-inmemory = { version = "0.1.0", path = "../event_store-eventbus-inmemory", optional = true }

event_store-storage-postgres = { version = "0.1.0", path = "../event_store-storage-postgres", optional = true }
event_store-backend-postgres = { version = "0.1.0", path = "../event_store-backend-postgres", optional = true }
event_store-eventbus-postgres = { version = "0.1.0", path = "../event_store-eventbus-postgres", optional = true }

[dev-dependencies]
pretty_assertions = "1.0.0"
test-log = { version = "0.2.8", default-features = false, features = ["trace"] }
test-span = "0.1.1"
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "env-filter",
    "fmt",
] }

[features]
default = ["postgres", "inmemory"]
verbose = []

postgres = ["postgres_backend", "postgres_event_bus", "postgres_storage"]
postgres_storage = ["event_store-storage-postgres"]
postgres_backend = ["event_store-backend-postgres"]
postgres_event_bus = ["event_store-eventbus-postgres"]

inmemory = ["inmemory_backend", "inmemory_event_bus", "inmemory_storage"]
inmemory_storage = ["event_store-storage-inmemory"]
inmemory_backend = ["event_store-backend-inmemory"]
inmemory_event_bus = ["event_store-eventbus-inmemory"]
