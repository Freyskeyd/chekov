initSidebarItems({"enum":[["EventStoreError",""],["ExpectedVersion","The `ExpectedVersion` used to define optimistic concurrency"],["ReadVersion",""],["StartFrom",""],["SubscriptionNotification",""]],"struct":[["EventStore","An `EventStore` that hold a storage connection"],["InMemoryBackend",""],["InMemoryEventBus",""],["InMemoryStorage","InMemory storage used for tests mostly"],["PostgresBackend",""],["PostgresEventBus",""],["PostgresStorage",""],["RecordedEvent","A `RecordedEvent` represents an `Event` which have been append to a `Stream`"],["RecordedEvents",""],["Stream","A `Stream` represents an `Event` stream"],["StreamForward",""],["StreamInfo",""],["Subscription",""],["SubscriptionOptions",""],["Subscriptions","Subscribe to a stream start a subscription in the supervisor The supervisor starts a subscription actor The subscription actor create a new FSM The subscription actor receive a Connect message - the FSM connects the subscriber - the FSM subscribe"],["SubscriptionsSupervisor",""],["UnsavedEvent","An `UnsavedEvent` is created from a type that implement `Event`"]],"trait":[["Event","Represent event that can be handled by an `EventStore`"]]});